using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace WOPIForms.WOPIClient
{
    public static class Constants
    {
        public const string ProofKey = "BwIAAACkAABSU0EyAAgAAAEAAQARYztrGVlRgjGvgPHGAArsQCbRRgGNPgUtn9U1te729UQ669hl/caOJqAnpZcRGlrNGytQQjgFHCmdSgI84buWKqicLyaLGEh7LaEabC+fIjVA8Jzepwc7Ns2Gjw+nqPcA9GvtKVHkPbt0sqFeyOUWoEBd5tUZ2EIaJGzTG8j5DKj8W42KQjfcORxILqbBVbDZ3ezX+JqjM0utEs+ERweDHBQrJbBhlmVZNpmByPgyWKbxRoLEI2UnBw1ykana/hRTqSB+mxBeHZEZQEeNqfFRz8Kd+SuKhSbza/rvRk5Mu3NI7kRI9cM5Zh7nXCmQK7qbuipcyDbws1ixPwRLwOGYfR3mz7tt/04bQfRHBKYEtOtngsKERS7uqz3Qm/tFjh3sa3JVtVkwy1CIapXOFz8fy4/ONpTINIPjHTgiT1x50zigrZZFKlMKttQ/n1dkgst3mI0C8AJqpEWPEJAtOodK0kX/wancioA+HMqo+1xOi12eGsEO/uiMJ3sPl99xS84loKeQZV03lF17kL81sjY3T9DO9dnsQXhsl4KgRaqDYnajZrzqu6aU2gZoFiWwVNKxtj1EnDeyFPmYXxBSiB2ENfoAWRQU1mrzb+lZYLPtAQacJL8ctsVeUhNEEb61GYPiOV7HSXrj0IKhXUG3Z2c+mHz6WUlJR8K2aL8JQ7m3vbmgREGQFbDMVnBKHIPXbDRxCcibrXNZH2oXqJcYBNITnZGuIRrdGl9LW+57PmzOIFAuLmae/geBrBU0FxYMiJaoqO3RffJ8oWW5JwwYMQ+Vre9WjkxfCN5+hHuPRSUfge++YK0Hkaz3IbKEkR0sLoqGjKt7Eso6vig8O4Mhz7M9vQIDgxBMB6HJGAnLxN5HPQ2mh15+Zrje98n1ZkiWCex/l/YDEqNKoS9OClGLRS9ArT+0TpnhTV2bXcBheWcPwhZYIaegQ2+Tx91xEMIMAoYHxMs71RGxFaHad1ATzHLofEGp4XFUUqYBiYU8dr1FZWvZ1UYvmsHB3B7oNf7qbRi5yHjsOBV84nzLdCQjOIV24L5jPeqi3vstq0LXzjnTnMvbf8zysvhef1NSgSsvWZ6qoRv+T4DiO+3dLD/7RlvAR1b9MA4/yx36u/iApLkDhKJ2IsmJwcsgpkgQyh9EKHzD2SowpIhwyBUagBQIMS0o775GIR12mJoOuZ+a9+f6dn0OUq7xklyXWxELr3c7HVx5uUVK8J+qViAVmOgS7VxxeAgGxEETucYTlk8VwCwgnlBN420fi6ZkfMns8UcfrF5nL+uA7G49sxsQnOlEhnQvr5iEF6mi3BCAe3usK5SbXpqI7Jg6pwngn2Z7T30qBX9thdzkVZD6ZaIDFBNTQyHaYtaybX4OyYkWiXAyFlhXb6np/4th/xGa78Fw0ZC2lo4zn/kFBgXYnlCTlxPL1bM5iUMuNRdFsmjQJb5f5MlioqiDvJpmr91tGKNPZGJTXpHWjYjBpJcSSC9sJItOSHVovyE6j5EWoGZtg9wdvEWOLrL75Tr+e+PBkvxk78UDexg=";

        public const string ProductTransformationXslt = @"<?xml version=""1.0"" encoding=""UTF-8""?>
            <!--Designed and generated by Altova StyleVision Enterprise Edition 2016 sp1 (x64) - see http://www.altova.com/stylevision for more information.-->
            <xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:altova=""http://www.altova.com"" xmlns:altova-xfi=""http://www.altova.com/xslt-extensions/xbrl"" xmlns:altovaext=""http://www.altova.com/xslt-extensions"" xmlns:array=""http://www.w3.org/2005/xpath-functions/array"" xmlns:clitype=""clitype"" xmlns:fn=""http://www.w3.org/2005/xpath-functions"" xmlns:iso4217=""http://www.xbrl.org/2003/iso4217"" xmlns:ix=""http://www.xbrl.org/2008/inlineXBRL"" xmlns:java=""java"" xmlns:link=""http://www.xbrl.org/2003/linkbase"" xmlns:map=""http://www.w3.org/2005/xpath-functions/map"" xmlns:math=""http://www.w3.org/2005/xpath-functions/math"" xmlns:sps=""http://www.altova.com/StyleVision/user-xpath-functions"" xmlns:xbrldi=""http://xbrl.org/2006/xbrldi"" xmlns:xbrli=""http://www.xbrl.org/2003/instance"" xmlns:xff=""http://www.xbrl.org/2010/function/formula"" xmlns:xfi=""http://www.xbrl.org/2008/function/instance"" xmlns:xlink=""http://www.w3.org/1999/xlink"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" exclude-result-prefixes=""altova altova-xfi altovaext array clitype fn iso4217 ix java link map math sps xbrldi xbrli xff xfi xlink xs xsi"">
	            <xsl:output version=""4.0"" method=""html"" indent=""no"" encoding=""UTF-8"" doctype-public=""-//W3C//DTD HTML 4.01 Transitional//EN"" doctype-system=""http://www.w3.org/TR/html4/loose.dtd""/>
	            <xsl:param name=""SV_OutputFormat"" select=""'HTML'""/>
	            <xsl:variable name=""XML"" select=""/""/>
	            <xsl:variable name=""altova:nPxPerIn"" select=""96""/>
	            <xsl:template match=""/"">
		            <html>
			            <head>
				            <title/>
				            <meta name=""generator"" content=""Altova StyleVision Enterprise Edition 2016 sp1 (x64) (http://www.altova.com)""/>
				            <meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>
				            <xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				            <xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				            <style type=""text/css"">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				            <xsl:comment>&lt;![endif]</xsl:comment>
				            <style type=""text/css"">@page { margin-left:0.60in; margin-right:0.60in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			            </head>
			            <body>
				            <div style=""position: relative"">
					            <div style=""height:9.42in; overflow:hidden; position:relative; width:7.30in; "">
						            <xsl:comment>[if IE]&gt;&lt;v:line style=&quot;height:0; left:0; position:absolute; top:0; width:0;&quot; from=&quot;0,0&quot; to=&quot;0,0&quot;&gt;&lt;/v:line&gt;&lt;![endif]</xsl:comment>
						            <div style=""height:0.24in; left:0.40in; overflow:hidden; padding:2px; position:absolute; top:0.40in; width:4.01in; "">
							            <span>
								            <xsl:text>Product Name: </xsl:text>
							            </span>
							            <xsl:for-each select=""$XML"">
								            <xsl:for-each select=""Product"">
									            <xsl:for-each select=""ProductName"">
										            <input style=""width:1.46in; "">
											            <xsl:attribute name=""value"">
												            <xsl:value-of select=""string(.)""/>
											            </xsl:attribute>
										            </input>
									            </xsl:for-each>
								            </xsl:for-each>
							            </xsl:for-each>
						            </div>
						            <div style=""height:0.24in; left:0.40in; overflow:hidden; padding:2px; position:absolute; top:1.20in; width:3.95in; "">
							            <span>
								            <xsl:text>Product Code: </xsl:text>
							            </span>
							            <xsl:for-each select=""$XML"">
								            <xsl:for-each select=""Product"">
									            <xsl:for-each select=""ProductCode"">
										            <input style=""width:1.46in; "">
											            <xsl:attribute name=""value"">
												            <xsl:value-of select=""string(.)""/>
											            </xsl:attribute>
										            </input>
									            </xsl:for-each>
								            </xsl:for-each>
							            </xsl:for-each>
						            </div>
						            <div style=""height:0.24in; left:0.40in; overflow:hidden; padding:2px; position:absolute; top:0.80in; width:3.86in; "">
							            <span>
								            <xsl:text>Product Type: </xsl:text>
							            </span>
							            <xsl:for-each select=""$XML"">
								            <xsl:for-each select=""Product"">
									            <xsl:for-each select=""ProductType"">
										            <select style=""width:1.46in; "">
											            <option value=""com"">
												            <xsl:if test=""string(.)='com'"">
													            <xsl:attribute name=""selected"">selected</xsl:attribute>
												            </xsl:if>Commercial</option>
											            <option value=""npro"">
												            <xsl:if test=""string(.)='npro'"">
													            <xsl:attribute name=""selected"">selected</xsl:attribute>
												            </xsl:if>Non-Profit</option>
										            </select>
									            </xsl:for-each>
								            </xsl:for-each>
							            </xsl:for-each>
						            </div>
					            </div>
				            </div>
			            </body>
		            </html>
	            </xsl:template>
            </xsl:stylesheet>";
    }
}